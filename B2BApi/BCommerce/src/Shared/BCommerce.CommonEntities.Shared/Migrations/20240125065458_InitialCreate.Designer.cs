// <auto-generated />
using System;
using BCommerce.CommonEntities.Shared.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BCommerce.CommonEntities.Shared.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240125065458_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AffectedColumns")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("affectedcolumns");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("audittype");

                    b.Property<string>("NewValues")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("newvalues");

                    b.Property<string>("OldValues")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("oldvalues");

                    b.Property<string>("PrimaryKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("primarykey");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tablename");

                    b.Property<DateTime>("Time_Stamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("time_stamp");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("CommonAuditLogs", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<int>("AppConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("AppDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("AppConfigId");

                    b.ToTable("BCOMAgentConfig", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DocumentId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("DocumentId");

                    b.ToTable("BCOMAgentDoc", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentFOP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("BCOMAgentFOP", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentFinance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreditLimit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreditLimitAlert")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PayPeriod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Security")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("TempCreditLimit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TempEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TempStart")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("BCOMAgentFinance", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentPOC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<string>("ContactType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LandPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("BCOMAgentPOC", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentPg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<string>("AppliedFee")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BufferType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BufferValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LedgerCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MerchantFee")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.Property<int>("locationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("locationId");

                    b.ToTable("BCOMAgentPg", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AMUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("AuthorizedPerson")
                        .HasColumnType("boolean");

                    b.Property<bool>("BlockStatus")
                        .HasColumnType("boolean");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<string>("CurrentBalance")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Doi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IATACode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Isiata")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LandPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<string>("LedgerCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LogoPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("POBox")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("ReceiptTotal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SalesUserId")
                        .HasColumnType("integer");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timezone")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("cityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StateId");

                    b.HasIndex("cityId");

                    b.ToTable("BCOMAgentProfile", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsPassive")
                        .HasColumnType("boolean");

                    b.Property<string>("LedgerCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PrivateFareCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("BCOMAgentSupplier", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAppConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AppKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AppValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("BookingStatus")
                        .HasColumnType("boolean");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PageFunctionId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PageFunctionId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("BCOMAppConfig", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("BCOMCity", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMContinent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("BCOMContinent", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int>("MarketId")
                        .HasColumnType("integer");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NationalityAR")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("MarketId");

                    b.ToTable("BCOMCountry", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("CurrencyCode")
                        .HasColumnType("numeric");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("BCOMCurrency", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileHeight")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileWidth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mandatory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Page")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("BCOMDocument", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMEventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("BCOMEventType", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<string>("AppliedRate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BaseCurrencyCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BufferType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BufferValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BuyingRate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SellingRate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.Property<string>("ToCurrencyCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("BCOMExchangeRate", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMFieldType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Flex1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Flex2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BCOMFieldType", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Order")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PageLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("BCOMFunction", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("BCOMLanguage", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<string>("BaseCurrency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Intergration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Landphone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LedgerCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParentAgentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("TaxReg")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("BCOMLocation", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMMarket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ContinentId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ContinentId");

                    b.ToTable("BCOMMarket", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMNationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("BCOMNationality", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMPrivilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("BCOMPrivilege", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BCOMProduct", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("BCOMRole", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMRoleDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("DeleteAccess")
                        .HasColumnType("boolean");

                    b.Property<int>("FunctionId")
                        .HasColumnType("integer");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<bool>("SaveAccess")
                        .HasColumnType("boolean");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<bool>("UpdateAccess")
                        .HasColumnType("boolean");

                    b.Property<bool>("ViewAccess")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("RoleId");

                    b.ToTable("BCOMRoleDetails", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("BCOMState", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiLastModified")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Credentials1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Credentials2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Credentials3")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Credentials4")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Credentials5")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Credentials6")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Credentials7")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Credentials8")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Credentials9")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<string>("EndPoint1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndPoint2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndPoint3")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndPoint4")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndPoint5")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndPoint6")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndPoint7")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Flex1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LedgerCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("SupplierAm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SupplierAmContact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TechContact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TechEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("cityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StateId");

                    b.HasIndex("cityId");

                    b.ToTable("BCOMSupplier", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplierConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AppKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AppValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Flex1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("BCOMSupplierConfig", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplierDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("BCOMSupplierDocument", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("BCOMTheme", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFieldId")
                        .HasColumnType("integer");

                    b.Property<int>("AccessLocationId")
                        .HasColumnType("integer");

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<int>("ChannelId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntegrationCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Login")
                        .HasColumnType("boolean");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("SubAgentId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TwoFactorAuthenticationcomm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorAuthenticationstatus")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("locationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("SubAgentId");

                    b.HasIndex("locationId");

                    b.ToTable("BCOMUser", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("BCOMUserRole", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMUserprivilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("privillageId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ConfigId");

                    b.HasIndex("UserId");

                    b.HasIndex("privillageId");

                    b.ToTable("BCOMUserprivilege", "dbo");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentConfig", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMAgentProfile")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAppConfig", "BCOMAppConfig")
                        .WithMany()
                        .HasForeignKey("AppConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMAgentProfile");

                    b.Navigation("BCOMAppConfig");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentDoc", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMAgentProfile")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMDocument", "BCOMDocument")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMAgentProfile");

                    b.Navigation("BCOMDocument");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentFOP", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMAgentProfile")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMAgentProfile");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentFinance", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMAgentProfile")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMAgentProfile");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentPOC", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMAgentProfile")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMAgentProfile");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentPg", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMAgentProfile")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMProduct", "BCOMProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplier", "BCOMSupplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMLocation", "BCOMLocation")
                        .WithMany()
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMAgentProfile");

                    b.Navigation("BCOMLocation");

                    b.Navigation("BCOMProduct");

                    b.Navigation("BCOMSupplier");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCountry", "BCOMCountry")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCurrency", "BCOMCurrency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMLanguage", "BCOMLanguage")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMParentAgentProfile")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMProduct", "BCOMProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMState", "BCOMState")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCity", "BCOMCity")
                        .WithMany()
                        .HasForeignKey("cityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMCity");

                    b.Navigation("BCOMCountry");

                    b.Navigation("BCOMCurrency");

                    b.Navigation("BCOMLanguage");

                    b.Navigation("BCOMParentAgentProfile");

                    b.Navigation("BCOMProduct");

                    b.Navigation("BCOMState");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentSupplier", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMAgentProfile")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMProduct", "BCOMProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplier", "BCOMSupplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMAgentProfile");

                    b.Navigation("BCOMProduct");

                    b.Navigation("BCOMSupplier");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAppConfig", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMFunction", "BCOMFunction")
                        .WithMany()
                        .HasForeignKey("PageFunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMProduct", "BCOMProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplier", "BCOMSupplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMFunction");

                    b.Navigation("BCOMProduct");

                    b.Navigation("BCOMSupplier");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCity", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCountry", "BCOMCountry")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMState", "BCOMState")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMCountry");

                    b.Navigation("BCOMState");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCountry", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMMarket", "BCOMMarket")
                        .WithMany()
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMMarket");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCurrency", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCountry", "BCOMCountry")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMCountry");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMEventType", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMProduct", "BCOMProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMProduct");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMExchangeRate", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMAgentProfile")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMProduct", "BCOMProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplier", "BCOMSupplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMAgentProfile");

                    b.Navigation("BCOMProduct");

                    b.Navigation("BCOMSupplier");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMLocation", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMAgentProfile")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMAgentProfile");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMMarket", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMContinent", "BCOMContinent")
                        .WithMany()
                        .HasForeignKey("ContinentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMContinent");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMNationality", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCountry", "BCOMCountry")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMCountry");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMRoleDetails", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMFunction", "BCOMFunction")
                        .WithMany()
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMRole", "BCOMRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMFunction");

                    b.Navigation("BCOMRole");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMState", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCountry", "BCOMCountry")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMCountry");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplier", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCountry", "BCOMCountry")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCurrency", "BCOMCurrency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMProduct", "BCOMProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMState", "BCOMState")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMCity", "BCOMCity")
                        .WithMany()
                        .HasForeignKey("cityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMCity");

                    b.Navigation("BCOMCountry");

                    b.Navigation("BCOMCurrency");

                    b.Navigation("BCOMProduct");

                    b.Navigation("BCOMState");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplierConfig", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplier", "BCOMSupplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMSupplier");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplierDocument", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMSupplier", "BCOMSupplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMSupplier");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMUser", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMAgentProfile")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAgentProfile", "BCOMSubAgentProfile")
                        .WithMany()
                        .HasForeignKey("SubAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMLocation", "BCOMLocation")
                        .WithMany()
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMAgentProfile");

                    b.Navigation("BCOMLocation");

                    b.Navigation("BCOMSubAgentProfile");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMUserRole", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMRole", "BCOMRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMUser", "BCOMUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMRole");

                    b.Navigation("BCOMUser");
                });

            modelBuilder.Entity("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMUserprivilege", b =>
                {
                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMAppConfig", "BCOMAppConfig")
                        .WithMany()
                        .HasForeignKey("ConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMUser", "BCOMUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BCommerce.CommonEntities.Shared.Infrastructure.Entities.BCOMPrivilege", "BCOMPrivilege")
                        .WithMany()
                        .HasForeignKey("privillageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BCOMAppConfig");

                    b.Navigation("BCOMPrivilege");

                    b.Navigation("BCOMUser");
                });
#pragma warning restore 612, 618
        }
    }
}
